#!/usr/bin/env python3
"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞
"""

from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler
from conversation.states import EDIT_CHOOSE, EDIT_VALUE
from conversation.storage import edit_data
from database import get_server_config, update_user_server
from utils.helpers import safe_send_message

async def edit_server_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞"""
    user_id = update.effective_user.id
    
    if not context.args:
        await safe_send_message(update, "üìù –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /edit_server <id_—Å–µ—Ä–≤–µ—Ä–∞>")
        return ConversationHandler.END
    
    try:
        server_id = int(context.args[0])
        server_config = get_server_config(server_id, user_id)
        
        if not server_config:
            await safe_send_message(update, "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return ConversationHandler.END
        
        edit_data[user_id] = {'server_id': server_id, 'server_config': server_config}
        
        await safe_send_message(update,
            "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:\n"
            "1. name - –ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞\n"
            "2. hostname - Hostname/IP\n"
            "3. username - –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
            "4. password - –ü–∞—Ä–æ–ª—å\n"
            "5. port - –ü–æ—Ä—Ç SSH\n"
            "6. directory - –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è\n"
            "7. filename - –ò–º—è —Ñ–∞–π–ª–∞ –±–æ—Ç–∞\n\n"
            "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–ª—è (1-7) –∏–ª–∏ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã:"
        )
        return EDIT_CHOOSE
        
    except ValueError:
        await safe_send_message(update, "‚ùå ID —Å–µ—Ä–≤–µ—Ä–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
        return ConversationHandler.END

async def edit_server_choose(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–í—ã–±–æ—Ä –ø–æ–ª–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    user_id = update.effective_user.id
    choice = update.message.text.strip()
    
    if choice.lower() == '/cancel':
        await safe_send_message(update, "‚ùå –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
        del edit_data[user_id]
        return ConversationHandler.END
    
    field_mapping = {
        '1': 'name', '2': 'hostname', '3': 'username',
        '4': 'password', '5': 'port', '6': 'directory', '7': 'filename'
    }
    
    if choice not in field_mapping:
        await safe_send_message(update, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 7:")
        return EDIT_CHOOSE
    
    field = field_mapping[choice]
    edit_data[user_id]['field'] = field
    
    current_value = edit_data[user_id]['server_config'].get(field, '')
    
    if field == 'password':
        current_display = '—Å–∫—Ä—ã—Ç' if current_value else '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'
    else:
        current_display = current_value or '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'
    
    await safe_send_message(update,
        f"‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–µ: {field}\n"
        f"–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {current_display}\n\n"
        f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–ª–∏ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã:"
    )
    return EDIT_VALUE

async def edit_server_value(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è"""
    user_id = update.effective_user.id
    new_value = update.message.text.strip()
    
    if new_value.lower() == '/cancel':
        await safe_send_message(update, "‚ùå –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
        del edit_data[user_id]
        return ConversationHandler.END
    
    server_id = edit_data[user_id]['server_id']
    field = edit_data[user_id]['field']
    
    # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø–æ–ª–µ–π
    if field == 'port':
        try:
            new_value = int(new_value)
            if new_value < 1 or new_value > 65535:
                raise ValueError
        except ValueError:
            await safe_send_message(update, "‚ùå –ü–æ—Ä—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º –æ—Ç 1 –¥–æ 65535. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:")
            return EDIT_VALUE
    
    elif field == 'password':
        if new_value.lower() == 'none':
            new_value = None
        elif new_value == '-':
            new_value = None
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ—Ä–≤–µ—Ä
    field_mapping = {
        'name': 'server_name',
        'hostname': 'hostname',
        'username': 'username',
        'password': 'password',
        'port': 'port',
        'directory': 'bot_directory',
        'filename': 'bot_filename'
    }
    
    db_field = field_mapping[field]
    success, message = update_user_server(server_id, user_id, **{db_field: new_value})
    
    await safe_send_message(update, message)
    del edit_data[user_id]
    
    return ConversationHandler.END

async def edit_server_cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–º–µ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞"""
    user_id = update.effective_user.id
    if user_id in edit_data:
        del edit_data[user_id]
    
    await safe_send_message(update, "‚ùå –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
    return ConversationHandler.END